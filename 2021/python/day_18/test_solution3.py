import json

from day_18.solution3 import (
    add, explode, parse, solve, compute, traverse, magnitude
)

data = """[1,2]
[[1,2],3]
[9,[8,7]]
[[1,9],[8,5]]
[[[[1,2],[3,4]],[[5,6],[7,8]]],9]
[[[9,[3,8]],[[0,9],6]],[[[3,7],[4,9]],3]]
[[[[1,3],[5,3]],[[1,3],[8,7]]],[[[4,9],[6,9]],[[8,2],[7,3]]]]"""


def test_parse():
    parsed = parse(data)
    assert parsed[0] == "[1,2]"
    assert parsed[1] == "[[1,2],3]"


def test_traverse():
    input = "[[[[[9,8],1],2],3],4]"
    order = list(traverse(input))
    assert order == [
        (9, 5, 5, 6),
        (8, 5, 7, 8),
        (1, 4, 10, 11),
        (2, 3, 13, 14),
        (3, 2, 16, 17),
        (4, 1, 19, 20),
    ]


def test_explode():
    input = "[[[[[9,8],1],2],3],4]"
    exploded = explode(input)
    assert exploded == "[[[[0,9],2],3],4]"

    for input, output in (
        ("[7,[6,[5,[4,[3,2]]]]]", "[7,[6,[5,[7,0]]]]"),
        ("[[6,[5,[4,[3,2]]]],1]", "[[6,[5,[7,0]]],3]"),
        (
            "[[3,[2,[1,[7,3]]]],[6,[5,[4,[3,2]]]]]",
            "[[3,[2,[8,0]]],[9,[5,[4,[3,2]]]]]",
        ),
    ):
        exploded = explode(input)
        assert exploded == output

    input = "[[3,[2,[8,0]]],[9,[5,[4,[3,2]]]]]"
    output = explode(input)
    assert output == "[[3,[2,[8,0]]],[9,[5,[7,0]]]]"


def test_add():
    x = "[[[[4,3],4],4],[7,[[8,4],9]]]"
    y = "[1,1]"

    res = add(x, y)
    assert res == "[[[[0,7],4],[[7,8],[6,0]]],[8,1]]"


def test_compute():
    assert compute(parse("""[1,1]
[2,2]
[3,3]
[4,4]""")) == "[[[[1,1],[2,2]],[3,3]],[4,4]]"

    assert compute(parse("""[[[0,[4,5]],[0,0]],[[[4,5],[2,6]],[9,5]]]
[7,[[[3,7],[4,3]],[[6,3],[8,8]]]]
[[2,[[0,8],[3,4]]],[[[6,7],1],[7,[1,6]]]]
[[[[2,4],7],[6,[0,5]]],[[[6,8],[2,8]],[[2,1],[4,5]]]]
[7,[5,[[3,8],[1,4]]]]
[[2,[2,2]],[8,[8,1]]]
[2,9]
[1,[[[9,3],9],[[9,0],[0,7]]]]
[[[5,[7,4]],7],1]
[[[[4,2],2],6],[8,7]]""")) == (
        "[[[[8,7],[7,7]],[[8,6],[7,7]]],[[[0,7],[6,6]],[8,7]]]"
    )


def test_magnitud():
    tree = "[[[[8,7],[7,7]],[[8,6],[7,7]]],[[[0,7],[6,6]],[8,7]]]"
    assert magnitude(json.loads(tree)) == 3488


def test_solve():
    data = """[[[0,[5,8]],[[1,7],[9,6]]],[[4,[1,2]],[[1,4],2]]]
[[[5,[2,8]],4],[5,[[9,9],0]]]
[6,[[[6,2],[5,6]],[[7,6],[4,7]]]]
[[[6,[0,7]],[0,9]],[4,[9,[9,0]]]]
[[[7,[6,4]],[3,[1,3]]],[[[5,5],1],9]]
[[6,[[7,3],[3,2]]],[[[3,8],[5,7]],4]]
[[[[5,4],[7,7]],8],[[8,3],8]]
[[9,3],[[9,9],[6,[4,9]]]]
[[2,[[7,7],7]],[[5,8],[[9,3],[0,2]]]]
[[[[5,2],5],[8,[3,7]]],[[5,[7,5]],[4,4]]]"""

    assert solve(parse(data)) == (4140, 3993)
