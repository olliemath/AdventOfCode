from day_10.solution import (
    complete_line, parse, compute1, compute2, check_line
)


data = """[({(<(())[]>[[{[]{<()<>>
[(()[<>])]({[<{<<[]>>(
{([(<{}[<>[]}>{[]{[(<()>
(((({<>}<{<{<>}{[]{[]{}
[[<[([]))<([[{}[[()]]]
[{[{({}]{}}([{[{{{}}([]
{<[[]]>}<{[{[{[]{()[[[]
[<(<(<(<{}))><([]([]()
<{([([[(<>()){}]>(<<{{
<{([{{}}[<[[[<>{}]]]>[]]"""


def test_parse():
    parsed = parse(data)
    assert parsed == [
        "[({(<(())[]>[[{[]{<()<>>",
        "[(()[<>])]({[<{<<[]>>(",
        "{([(<{}[<>[]}>{[]{[(<()>",
        "(((({<>}<{<{<>}{[]{[]{}",
        "[[<[([]))<([[{}[[()]]]",
        "[{[{({}]{}}([{[{{{}}([]",
        "{<[[]]>}<{[{[{[]{()[[[]",
        "[<(<(<(<{}))><([]([]()",
        "<{([([[(<>()){}]>(<<{{",
        "<{([{{}}[<[[[<>{}]]]>[]]",
    ]


def test_compute1():
    parsed = parse(data)
    assert compute1(parsed) == 26397


def test_check_line():
    assert check_line("[[<[([]))<([[{}[[()]]]") == 3
    assert check_line("[{[{({}]{}}([{[{{{}}([]") == 57


def test_completion():
    assert complete_line("[({(<(())[]>[[{[]{<()<>>") == "}}]])})]"


def test_compute2():
    parsed = parse(data)
    assert compute2(parsed) == 288957
